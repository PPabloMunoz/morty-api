import Head from 'next/head'
import { useState, useEffect } from 'react'
import { characters, Results } from '@/src/types/charactersTypes'

import { Card, Footer, headerLogo } from '@/src/components'

import toast, { Toaster } from 'react-hot-toast'
import Link from 'next/link'

export default function Home() {
  const [page, setPage] = useState<number>(1)
  const [data, setData] = useState<Results>()

  useEffect(() => {
    getCharacters()
  }, [])

  async function getCharacters(page?: string | undefined | null) {
    if (page === null) return
    let data
    if (page === undefined) {
      data = await fetch(`https://rickandmortyapi.com/api/character`)
    } else {
      data = await fetch(page!)
    }

    const response: Results = await data.json()
    // console.log(response, 'res')
    setData(response)
  }

  function updatePage(action: 'next' | 'prev') {
    if (action === 'next') {
      if (page === 42) {
        toast.error('There are not more pages')
        return
      }
      setPage(page + 1)
    } else if (action === 'prev') {
      if (page === 1) {
        toast.error('There are not a previous page')
        return
      }

      setPage(page - 1)
    }
  }

  return (
    <>
      <Toaster />
      <Head>
        <title>Rick and Morty API</title>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width, initial-scale=1' />
        <link rel='icon' href='/favicon.svg' />
      </Head>

      <header className='w-full py-4 bg-slate-700 relative'>
        <h1
          className='text-center font-bold text-5xl cursor-pointer'
          onClick={() => {
            setPage(1)
            getCharacters()
          }}>
          Rick and Morty API
        </h1>
        <div className='absolute top-[2px] left-3 w-14'>{headerLogo}</div>
      </header>

      <div className='btn-group w-full justify-center items-center my-6'>
        <button
          className='btn'
          onClick={() => {
            getCharacters(data?.info.prev)
            updatePage('prev')
          }}>
          «
        </button>
        <button className='btn'>Page {page}</button>
        <button
          className='btn'
          onClick={() => {
            getCharacters(data?.info.next)
            updatePage('next')
          }}>
          »
        </button>
      </div>

      <main className='bg-slate-800 min-h-screen grid grid-cols-3 gap-4 px-24 mb-10'>
        {data?.results &&
          data.results.map((character: characters) => {
            return <Card key={character.id} character={character} />
          })}
      </main>

      <Footer />
    </>
  )
}
